{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.module.ts","webpack:///./src/app/models/user.model.ts","webpack:///./src/app/user/add-user.component.html","webpack:///./src/app/user/add-user.component.ts","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/user/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"a:hover {\\r\\n  background-color: ;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7Q0FDcEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImE6aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IDtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n<div class=\\\"col-md-offset-1\\\">\\n  <h1>\\n    Welcome to {{title}}!\\n  </h1>\\n</div>\\n\\n<a routerLink=\\\"/users\\\">List Users</a>\\n<a style=\\\"margin-left:10px\\\" routerLink=\\\"/add\\\">Add User</a>\\n<br/>\\n<router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'User App';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { AppRoutingModule } from './app.routing.module';\nimport {UserService} from './user/user.service';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {AddUserComponent} from './user/add-user.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    AddUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { UserComponent } from './user/user.component';\nimport {AddUserComponent} from './user/add-user.component';\n\nconst routes: Routes = [\n  { path: 'users', component: UserComponent },\n  { path: 'add', component: AddUserComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","export class User {\n\n  id: number;\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n","module.exports = \"<div class=\\\"col-md-6\\\">\\n  <h2 class=\\\"text-center\\\">Add User</h2>\\n<form>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email\\\">Email address:</label>\\n    <input type=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"firstName\\\">First Name:</label>\\n    <input [(ngModel)]=\\\"user.firstName\\\" placeholder=\\\"First Name\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" id=\\\"firstName\\\">\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"lastName\\\">Last Name:</label>\\n    <input [(ngModel)]=\\\"user.lastName\\\" placeholder=\\\"Last name\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" id=\\\"lastName\\\">\\n  </div>\\n\\n  <button class=\\\"btn btn-success\\\" (click)=\\\"createUser()\\\">Create</button>\\n</form>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { User } from '../models/user.model';\nimport { UserService } from './user.service';\n\n@Component({\n  templateUrl: './add-user.component.html'\n})\nexport class AddUserComponent {\n\n  user: User = new User();\n\n  constructor(private router: Router, private userService: UserService) {\n\n  }\n\n  createUser(): void {\n    this.userService.createUser(this.user)\n        .subscribe( data => {\n          alert(\"User created successfully.\");\n        });\n\n  };\n\n}\n","module.exports = \"<div class=\\\"col-md-6\\\">\\n<h2> User Details</h2>\\n\\n<div class=\\\"form-group row\\\">\\n<table class=\\\"table table-striped\\\">\\n    <thead>\\n    <tr>\\n    <th class=\\\"hidden\\\">Id</th>\\n    <th>First Name</th>\\n    <th>Last Name</th>\\n    <th>Email</th>\\n    <th>Action</th>\\n  </tr>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let user of users\\\">\\n\\n    <td class=\\\"hidden\\\">{{user.id}}</td>\\n    <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.firstName\\\" value={{user.firstName}}></td>\\n    <td><input  class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.lastName\\\" value={{user.lastName}}></td>\\n    <td><input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.email\\\" value={{user.email}}></td>\\n    <td><button class=\\\"btn btn-primary\\\" (click)=\\\"editUser(user)\\\"> Edit User</button></td>\\n    <td><button class=\\\"btn btn-danger\\\" (click)=\\\"deleteUser(user)\\\"> Delete User</button></td>\\n\\n  </tr>\\n  </tbody>\\n</table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { User } from '../models/user.model';\nimport { UserService } from './user.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styles: []\n})\nexport class UserComponent implements OnInit {\n\n  users: User[];\n  constructor(private router: Router, private userService: UserService) {\n\n  }\n\n  ngOnInit() {\n    this.userService.getUsers()\n      .subscribe( data => {\n        this.users = data;\n      });\n  };\n\n  editUser(user: User): void {\n      this.userService.editUser(user)\n      .subscribe( data => {\n      alert(\"User updated successfully.\");\n      })\n  };\n  deleteUser(user: User): void {\n    this.userService.deleteUser(user)\n      .subscribe( data => {\n        this.users = this.users.filter(u => u !== user);\n      })\n  };\n\n}\n","import {Injectable} from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { User } from '../models/user.model';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable()\nexport class UserService {\n\n  constructor(private http:HttpClient) {}\n\n  private userUrl = 'http://localhost:8080/user-portal/users';\n  //private userUrl = '/api';\n\n  public getUsers() {\n    return this.http.get<User[]>(this.userUrl);\n  }\n\n  public deleteUser(user) {\n    return this.http.delete(this.userUrl + \"/\"+ user.id);\n  }\n\n  public editUser(user) {\n    return this.http.put<User>(this.userUrl + \"/\"+ user.id, user);\n  }\n\n  public createUser(user) {\n    return this.http.post<User>(this.userUrl, user);\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}